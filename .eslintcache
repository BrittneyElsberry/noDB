[{"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\index.js":"1","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js":"2","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\App.js":"3","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js":"4","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js":"5","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js":"6","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js":"7","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js":"8","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\Auth.js":"9","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\index.js":"10","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\App.js":"11","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js":"12","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js":"13","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js":"14","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js":"15","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js":"16","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js":"17","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\Auth.js":"18","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\LoginForm.js":"19","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\RegisterForm.js":"20","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\ErrorMessage.js":"21","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\Goals.js":"22","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\Comments.js":"23","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\EditComments.js":"24","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Profile\\Profile.js":"25"},{"size":579,"mtime":1613849039747,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":318,"mtime":1613849673139,"results":"29","hashOfConfig":"27"},{"size":539,"mtime":1612385541227,"results":"30","hashOfConfig":"27"},{"size":1911,"mtime":1612369074307,"results":"31","hashOfConfig":"27"},{"size":2873,"mtime":1613847078544,"results":"32","hashOfConfig":"27"},{"size":2764,"mtime":1613849232548,"results":"33","hashOfConfig":"27"},{"size":2045,"mtime":1613847201160,"results":"34","hashOfConfig":"27"},{"size":1525,"mtime":1613927752809,"results":"35","hashOfConfig":"27"},{"size":674,"mtime":1617745916200,"results":"36","hashOfConfig":"37"},{"size":728,"mtime":1621799498619,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":3593,"mtime":1620153341885,"results":"40","hashOfConfig":"37"},{"size":3693,"mtime":1620153262829,"results":"41","hashOfConfig":"37"},{"size":1824,"mtime":1621799682629,"results":"42","hashOfConfig":"37"},{"size":3370,"mtime":1621798651110,"results":"43","hashOfConfig":"37"},{"size":2631,"mtime":1618875916685,"results":"44","hashOfConfig":"37"},{"size":5612,"mtime":1618960632132,"results":"45","hashOfConfig":"37"},{"size":3151,"mtime":1620434897226,"results":"46","hashOfConfig":"37"},{"size":4206,"mtime":1618876216897,"results":"47","hashOfConfig":"37"},{"size":421,"mtime":1617821596563,"results":"48","hashOfConfig":"37"},{"size":4326,"mtime":1618966047584,"results":"49","hashOfConfig":"37"},{"size":7482,"mtime":1620153899091,"results":"50","hashOfConfig":"37"},{"size":889,"mtime":1618877073714,"results":"51","hashOfConfig":"37"},{"size":183,"mtime":1621799779111,"results":"52","hashOfConfig":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1twh4r4",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"18akige",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\index.js",[],["115","116"],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\App.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js",["117","118","119"],"import React, {Component} from 'react'\r\nimport Main from './Main'\r\nimport routes from '.././routes'\r\n\r\n\r\nconst JobListing = (props)=> {\r\nconsole.log(props)\r\n  \r\n    return (\r\n        <div className=\"jobListingContainer\">\r\n            <h1 className=\"jlheader \">Job Listing</h1>\r\n            <br></br>\r\n            <p className=\"descrip\">Company: </p> {props.jobListing.company}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Job Title:</p> <span className=\"jobContent\">{props.jobListing.jobtitle}</span>\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\" >About: </p> <span className=\"jobContent\"> <br></br>{props.jobListing.about}</span>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Responsibilities: </p><br></br> {props.jobListing.responsibilities}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\"> Skill Requirements:</p> \r\n            <br></br>\r\n            {props.jobListing.skillrequirements ? (\r\n                         <ul><li>{props.jobListing.skillrequirements[0]}</li>\r\n                         <li>{props.jobListing.skillrequirements[1]}</li>\r\n                         <li>{props.jobListing.skillrequirements[2]}</li>\r\n                         <li>{props.jobListing.skillrequirements[3]}</li>\r\n                         <li>{props.jobListing.skillrequirements[4]}</li>\r\n                         <li>{props.jobListing.skillrequirements[5]}</li>\r\n                         <li>{props.jobListing.skillrequirements[6]}</li> \r\n             </ul>\r\n\r\n             ) : null }\r\n    \r\n            <br></br>\r\n            <p className=\"descrip\">Technical Knowledge Requirements: </p>\r\n            <br></br>\r\n            {props.jobListing.technicalknowledgerequirements ? (\r\n\r\n            <ul ><li>{props.jobListing.technicalknowledgerequirements[0]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[1]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[2]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[3]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[4]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[5]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[6]}</li>\r\n\r\n            </ul> ) : null }\r\n            \r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Employement Type:</p>{props.jobListing.employmenttype}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Seniority Level: </p>{props.jobListing.senioritylevel}\r\n            <br></br>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default JobListing\r\n","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js",["120"],"import React, {Component} from 'react'\r\n// import Accomplishments from './Accomplishments'\r\n// import axios from 'axios'\r\n\r\n\r\nclass Edit extends Component {\r\nconstructor(){\r\nsuper()\r\nthis.state = {\r\n    editing: false,\r\n    userInput: ''\r\n   \r\n}\r\n}\r\n\r\ntoggleEditMode=()=>{\r\n    this.setState({editing: true})\r\n}\r\n\r\nhandleEditChange=(e)=>{\r\n    this.setState({userInput: e.target.value})\r\n}\r\n\r\nrender(){\r\n    const {accomp, deleteSkills, updateSkills, skills} = this.props\r\n    \r\nreturn(\r\n\r\n    <>\r\n    {this.state.editing ? (\r\n\r\n        <li><input className=\"editInput\" \r\n                    value={this.state.userInput}\r\n                    type=\"text\" \r\n                    onChange={(e)=>this.handleEditChange(e)}/>\r\n\r\n       <button className=\"editSavebtn\" onClick={()=> \r\n       {\r\n           updateSkills(accomp.id, this.state.userInput)\r\n           this.setState({editing: false})\r\n        }}>Save</button></li>\r\n    ): (\r\n        <li className=\"accompListEditXbtns\">\r\n              {accomp.skills}\r\n             \r\n             <button className=\"editXbtn\" onClick={()=>deleteSkills(accomp.id)}>X</button>\r\n             <button className=\"editbtn\" onClick={(e)=>this.toggleEditMode(e)}>Edit</button>\r\n        </li>\r\n    ) }\r\n    </>\r\n            )\r\n\r\n\r\n}\r\n\r\n    // return(\r\n    \r\n    // <div> \r\n\r\n\r\n    //           {this.state.accomplishments.map(accomp => {\r\n    //          return {this.state.editing \r\n    //          ? \r\n    //             <input key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleSave(e)}>Save</button> <input/>\r\n    //         : \r\n    //           <ul key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleSave(e)}>Save</button></ul>        \r\n\r\n      // onChange={(e)=>handleSave(e.target.value)\r\n      //  value={this.state.userInput}\r\n          \r\n\r\n    //      )}    \r\n   \r\n    //  )}  )  </div> )\r\n}\r\nexport default Edit\r\n\r\n\r\n","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\Auth.js",["121","122"],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\index.js",[],["123","124"],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\App.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js",["125"],"import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport Header from './Header'\r\nimport Accomplishments from './Accomplishments'\r\nimport JobListing from './JobListing'\r\nimport {Box, Heading, Input, Button, Flex} from '@chakra-ui/react'\r\nimport {TiDeleteOutline} from 'react-icons/ti'\r\n\r\n\r\nclass Main extends Component {\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n      goals: [{goalName: '', startDate: '', endDate: '', goalID: 0, complete: false}],\r\n      careerS: [{careerSId: 0, careerSName: ''}],\r\n      jobListing: {},\r\n      myNextRole: '',\r\n      savedRole: []   \r\n\r\n    }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n  this.getJobListing()\r\n  this.getMyRole()\r\n  \r\n}\r\n\r\n\r\ngetJobListing=()=>{\r\n  axios.get('/api/jobListing') \r\n  .then(res => {\r\n    // console.log(res.data)\r\n      this.setState({\r\n          jobListing: res.data\r\n      })\r\n  }).catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  getMyRole=()=>{\r\n    axios.get('/myrole') \r\n    .then(res => {\r\n      console.log(res.data, 'getmyrole')\r\n        this.setState({\r\n            savedRole: res.data\r\n        })\r\n    }).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    postMyRole = (role) =>{\r\n      axios.post(`/addmyrole`, {role}) \r\n      .then(res => {\r\n          console.log(res.data, 'did it work?')\r\n          this.setState({\r\n              savedRole: res.data,\r\n              myNextRole: ''\r\n      \r\n          })\r\n      }).catch(err => console.log(err))\r\n      \r\n      \r\n      }\r\n\r\n\r\n      deleteMyRole =()=>{\r\n        axios.delete(`/`)\r\n      }\r\n\r\n\r\n      handleRoleChange=(e)=>{\r\n\r\n        this.setState({myNextRole: e.target.value})\r\n      }\r\n\r\n\r\nrender(){\r\n\r\n// console.log(this.state.savedRole, 'savedRole')\r\n\r\nreturn(\r\n\r\n<>\r\n\r\n\r\n\r\n\r\n\r\n      <Header myNextRole={this.state.myNextRole} displayRole={this.displayRole} \r\n              handleRoleChange={this.handleRoleChange} postMyRole={this.postmyRole} \r\n              savedRole={this.state.savedRole}/>\r\n\r\n    \r\n          <Box className='my-role-flex-box'>\r\n              <Box className='my-role-box' >\r\n                <Heading  className='my-next-role' size='md' ml='20'>My Next Role </Heading> \r\n                  <br></br>\r\n                <Box id='inputandsave'>\r\n                <Input size='xs' \r\n                      className='my-next-role-input' \r\n                      value={this.state.myNextRole} onChange={(e)=>this.handleRoleChange(e)}/> \r\n               \r\n                <Button className=\"myRoleButton\" \r\n                        size='xs' \r\n                        onClick={()=>this.postMyRole(this.state.myNextRole)}>\r\n                          \r\n                Save\r\n                </Button>\r\n                <Button className=\"myRoleButton\" \r\n                        size='xs' \r\n                        onClick={()=>this.postMyRole(this.state.myNextRole)}>\r\n                          \r\n                X\r\n                </Button>\r\n               \r\n            \r\n                </Box>\r\n                </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              { this.state.savedRole[0] && (\r\n\r\n                <Flex direction='row'>\r\n                <Box>\r\n                <Heading id=\"jobTitleDisplayed\" size='lg' w='100%'>{this.state.savedRole[0].my_role} </Heading>\r\n                \r\n                </Box>\r\n                </Flex>\r\n            \r\n\r\n              )\r\n \r\n      \r\n\r\n              }\r\n\r\n                </Box>\r\n      <div className=\"mainContainer\">\r\n\r\n\r\n      <JobListing jobListing={this.state.jobListing} />\r\n      <div className=\"goalsAndAccompContainer\">\r\n  \r\n      <Accomplishments />\r\n      </div>\r\n</div>\r\n</>\r\n)\r\n}\r\n}\r\n\r\nexport default Main","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js",["126","127"],"import {useState, useEffect} from 'react'\r\n// import Main from './Main'\r\nimport axios from 'axios'\r\nimport Edit from './Edit'\r\nimport {\r\n    Button, \r\n    Input, \r\n    Container,\r\n    Box} from '@chakra-ui/react'\r\n// import { getSkills } from '../../server/skillsController'\r\n\r\n\r\nconst Accomplishments =()=>{\r\n\r\n\r\nconst [skills, setSkills] = useState('')\r\nconst [accomplishments, setAccomplishments] = useState('')\r\nconst [editing, setEditing] = useState(false)\r\n\r\n\r\n\r\n            useEffect(()=>{\r\n            getSkills()\r\n\r\n            }, [])\r\n\r\n\r\n\r\n\r\n        const getSkills=()=>{\r\n            axios.get('/getskills')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setAccomplishments(res.data)\r\n            \r\n            }).catch(err => console.log(err))\r\n            }\r\n\r\n\r\n        const  addSkills=(skills)=>{\r\n                axios.post('/addskills', {skills}) \r\n                .then(_=> {\r\n                \r\n                    getSkills()\r\n                    \r\n            \r\n                }).catch(err => console.log(err))\r\n                }\r\n\r\n        const  editSkills= (id, skills) =>{\r\n                    axios.put(`/editskills/${id}`, {skills}) \r\n                    .then(res => {\r\n                    \r\n                        setAccomplishments(res.data)\r\n                    \r\n                    })  \r\n                        .catch(err => console.log(err))\r\n                    }\r\n            \r\n                    \r\n                    const deleteSkills = id =>{\r\n                        axios.delete(`/deleteskills/${id}`)\r\n                        .then(_ => {\r\n                            getSkills()\r\n                        }).catch(err => console.log(err))\r\n                    }      \r\n                    \r\n                    \r\n                    const handleChange= e =>{\r\n                        console.log(e)\r\n                        setSkills(e)\r\n                        \r\n                    }  \r\n                    \r\n                    \r\n                    const handleEdit=()=>{\r\n                        setEditing(true)\r\n                    }\r\n                    \r\n                    \r\n                    // console.log(accomplishments, 'after editing')\r\n            \r\n            return(\r\n                \r\n\r\n        <> \r\n       \r\n        <Container >\r\n        <Box padding='5' bg='gray.100' overflowY='scroll' height='80vh' width='40vw' className='accomp-box'>\r\n\r\n            \r\n            <h1 className=\"accompHeader\">Career Accomplishments</h1>\r\n           <br></br>\r\n            \r\n            <Input  size='xs'\r\n                    isRequired \r\n                    type=\"text\" \r\n                    value={skills}\r\n                   onChange={(e)=>handleChange(e.target.value)}/>\r\n       \r\n            <Button variant='solid' colorScheme='teal' size='xs' p={2} onClick={()=>addSkills(skills)}>Submit</Button>\r\n          \r\n\r\n         \r\n            <ul className='listBox' >\r\n            { accomplishments &&\r\n            \r\n            accomplishments.map(accomp => {\r\n             return  <li key={accomp.accomp_id} className='accomp-list-items'>\r\n                     <Edit accomp={accomp.accomplishments} id={accomp.accomp_id} deleteSkills={deleteSkills} editSkills={editSkills} handleChange={handleChange} skills={skills}/> </li> })}\r\n             {/* return <ul key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleEdit(e)}>Edit</button></ul> })} */}</ul>\r\n            \r\n            \r\n             </Box>\r\n             </Container>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Accomplishments","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\Auth.js",["128","129","130","131","132","133","134","135","136","137"],"\r\nimport React, {useState} from 'react'\r\nimport RegisterForm from './RegisterForm'\r\nimport LoginForm from './LoginForm'\r\nimport './Auth.css'\r\nimport {ChakraProvider, CSSReset, Button, Heading, Text, Flex, Spacer, Box, Container, useBreakpointValue, \r\n          DrawerBody,\r\n          DrawerFooter,\r\n          DrawerHeader,\r\n          DrawerOverlay,\r\n          DrawerContent,\r\n          DrawerCloseButton,\r\n          Drawer,\r\n          useDisclosure,\r\n          useStyles} from '@chakra-ui/react'\r\n// import {IoIosArrowForward} from 'react-icons/io'\r\n\r\nconst Auth = (props) =>{\r\n\r\n  // const { isOpen, onOpen, onClose } = useDisclosure()\r\n  // const btnRef = React.useRef()\r\n  // const styles = useStyles()\r\n\r\n\r\n\r\n  const smVariant = useBreakpointValue({base: 'outline', md: 'solid'})\r\n\r\n\r\n  const [toggleLogin, setToggleLogin] = useState(false)\r\n  const [toggleRegister, setToggleRegister] = useState(false)\r\n  const [toggleAbout, setToggleAbout] = useState(false)\r\n  // const [toggleSidebar, setToggleSidebar] =useState(false)\r\n  \r\n\r\n  const displayLoginForm = ()=>{\r\n    setToggleLogin(true)\r\n    setToggleRegister(false)\r\n    setToggleAbout(false)\r\n  }\r\n\r\n  const displayRegisterForm = ()=>{\r\n    setToggleRegister(true)\r\n    setToggleLogin(false)\r\n    setToggleAbout(false)\r\n  }\r\n\r\n  const displayAbout = ()=>{\r\n    setToggleAbout(true)\r\n    setToggleRegister(false)\r\n    setToggleLogin(false)\r\n  }\r\n\r\n  // const displaySidebar = ()=>{\r\n  //   setToggleSidebar(true)\r\n\r\n  // }\r\n\r\nreturn (\r\n    <>  \r\n\r\n          <Flex \r\n          direction={['column', 'column', 'row', 'row']}\r\n          >\r\n            <Box p=\"4\" margin='auto' alignItems='center' w={['100%', '100%']} >\r\n              <Heading size='lg' color='teal'>Career Development</Heading>\r\n                    \r\n                    {/* <Button \r\n                    \r\n                   \r\n\r\n                    \r\n                    ><IoIosArrowForward/>\r\n                    \r\n                    </Button> */}\r\n\r\n                   \r\n\r\n                <Flex direction={['column', 'column', 'column', 'column']} justify={['center']} centerContent>\r\n                <Box alignItems='center' w={['100%', '50%']} h={['100%', '50%']} direction={['column', 'column']}>\r\n                <Button \r\n                        colorScheme='teal' \r\n                        size='md' \r\n                        mt='2'\r\n                        mr='4'\r\n                        onClick={displayAbout}\r\n                        >About\r\n                  </Button>\r\n\r\n\r\n                  <Button colorScheme='teal' \r\n                          size='md' \r\n                          mr='4'\r\n                          mt='2'\r\n                         \r\n                          onClick={displayLoginForm}\r\n                          >Login\r\n                  </Button>\r\n\r\n                  <Button \r\n                        colorScheme='teal' \r\n                        size='md' \r\n                        mt='2'\r\n                        mr='4'\r\n                        onClick={displayRegisterForm}\r\n                        >Register\r\n                  </Button>\r\n\r\n\r\n                  </Box>\r\n                  </Flex>\r\n              </Box>\r\n              <Spacer/>\r\n              </Flex>\r\n                \r\n                \r\n         \r\n\r\n\r\n\r\n            \r\n\r\n\r\n\r\n              \r\n\r\n    \r\n              {/* <Text fontSize='sm' mb={4}>Track your progress througout your career and help prepare for promotion interviews</Text> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <ChakraProvider>\r\n        <CSSReset/>\r\n\r\n        { toggleLogin ?  <LoginForm/>  : null }\r\n        { toggleRegister ?  <RegisterForm/> : null }\r\n        { toggleAbout ? \r\n\r\n                        <Flex \r\n                        \r\n                        w={['90vw', '90vw', '70vw', '70vw']}\r\n                   \r\n                        \r\n                        \r\n                        >\r\n                          <Container centerContent>\r\n                          <Box padding={['10','10', '20', '20']}  bg='gray.100' h={['80vh']} centerContent w={['80vw']} >\r\n                        \r\n                              \r\n                              <Text className='about-list' padding={['2', '5']} fontSize={['md', 'md', 'md', 'sm']}>\r\n                                  Stay organized as your working towards those next steps in your career. Whether it's to help prepare your for job interviews.\r\n                              </Text>\r\n                            \r\n                            \r\n                              <Text className='about-list' fontSize={['md', 'md', 'md', 'sm']}>\r\n                              Compare your skills and experience with the skills and experience of a job listing you're interested in.\r\n                              </Text>\r\n                              \r\n                              <Text className='about-list' fontSize={['md', 'md', 'md', 'sm']}>\r\n                              Keep track of your career Accomplishments\r\n                              </Text>\r\n                              \r\n                              <Text className='about-list' fontSize={['md', 'md', 'md', 'sm']} >\r\n                              Set and track goals\r\n                              </Text>\r\n                          \r\n                            \r\n                          \r\n                          \r\n\r\n\r\n                          </Box>\r\n                        </Container>\r\n                        </Flex>\r\n                        \r\n                      : null\r\n      }\r\n        \r\n        </ChakraProvider>\r\n\r\n\r\n     \r\n    </>\r\n \r\n)    \r\n\r\n}\r\n\r\nexport default Auth\r\n\r\n\r\n","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\LoginForm.js",["138"],"import {useState} from 'react'\r\nimport {Stack, \r\n    Button, \r\n    FormControl, \r\n    FormLabel, \r\n    FormHelperText,\r\n    Input, \r\n    Container,\r\n    Box} from '@chakra-ui/react'\r\n    import ErrorMessage from './ErrorMessage'\r\n    import axios from 'axios'\r\n    import {useHistory} from 'react-router-dom'\r\n\r\n\r\n//error when trying it this way \r\n\r\n//variable for testing login validation\r\n\r\nexport default function LoginForm (){\r\n\r\n    const [email, setEmail] = useState('')\r\n    // const [str, setStr] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [showPassword, setShowPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const isInvalid = password === '' || email === ''\r\n    const {push} = useHistory()\r\n \r\n \r\n    // const validateInput = str.includes('@');\r\n\r\n    const handleSignIn = (event)=>{\r\n        event.preventDefault()\r\n        console.log(email, password)\r\n        axios.post(`/login`, {email, password})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            push('/home')\r\n        \r\n        })\r\n        .catch(err=> {\r\n            setError(err)\r\n            console.log(err)})\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n   \r\n        <Container maxW='sm' centerContent>\r\n            <Box padding='10' bg='gray.100'>\r\n        <form method=\"POST\" onSubmit={handleSignIn}>\r\n        {error && <ErrorMessage message={error}/>}\r\n            <Stack maxWidth={600} margin='auto' spacing={5} marginTop={5}/>\r\n            <FormControl>\r\n                <FormLabel htmlFor='email' className='form-labels' >Email</FormLabel>\r\n                <Input  className='login-input'\r\n                        isRequired\r\n                        size='xs'\r\n                        type='email'\r\n                        id='email'\r\n                        aria-describedby='email-helper-text' \r\n                        value={email}\r\n                        onChange={(e)=> setEmail(e.target.value)}/>\r\n                <FormHelperText id='email-helper-text' >We'll never share your email</FormHelperText>\r\n            </FormControl>\r\n            <FormControl>\r\n                <FormLabel htmlFor='password' className='form-labels' mt='2' >Password</FormLabel>\r\n                <Input  className='login-input'\r\n                        isRequired\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        id='password'\r\n                        size='xs'\r\n                        aria-describedby='password-helper-text' \r\n                        value={password}\r\n                        onChange={(e)=> setPassword(e.target.value)}/>\r\n                          <FormHelperText id='password-helper-text'  >The password you used to sign up with</FormHelperText>\r\n            </FormControl>\r\n            \r\n         \r\n            <FormControl>\r\n            <Button colorScheme='teal' type='submit' disabled={isInvalid} variant='outline' size='sm' mt='2' >Login</Button>\r\n            </FormControl>\r\n\r\n        </form>  \r\n        </Box>\r\n        </Container>       \r\n    </div>\r\n    \r\n    )\r\n\r\n\r\n}\r\n\r\n// export const validateInput = (str='') = str.includes('@');   ","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\RegisterForm.js",["139"],"import {useState} from 'react'\r\nimport {Stack, \r\n        Button, \r\n        FormControl, \r\n        FormLabel, \r\n        Input, \r\n        FormHelperText, \r\n        Container,\r\n        Box} from '@chakra-ui/react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [showPassword, setShowPassword] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const isInvalid = password === '' || email === ''\r\n    const {push} = useHistory()\r\n\r\n\r\n\r\n    const handleSignIn = (formSubmit)=>{\r\n        formSubmit.preventDefault()\r\n        console.log(email, password, firstName, lastName)\r\n        axios.post(`/register`, {email, password, firstName, lastName})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            push('/home')\r\n        \r\n        })\r\n        .catch(err=> {\r\n            console.log(err)})\r\n\r\n    }\r\n\r\n\r\n    return ( <div>\r\n   \r\n                <Container maxW='sm' centerContent>\r\n                    <Box padding='10' bg='gray.100'>\r\n                <form onSubmit={handleSignIn}>\r\n                    <Stack maxWidth={600}  spacing={5} marginTop={5}/>\r\n                        <FormControl isRequired>\r\n                            <FormLabel className='form-labels' htmlFor='email'>Email</FormLabel>\r\n                            <Input  isRequired\r\n                                    size='xs'\r\n                                    type='email'\r\n                                    id='email'\r\n                                    aria-describedby='email-helper-text' \r\n                                    value={email}\r\n                                    onChange={(e)=> setEmail(e.target.value)}/>\r\n                            <FormHelperText id='email-helper-text' >We'll never share your email</FormHelperText>\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel htmlFor='password' className='form-labels' >Password</FormLabel>\r\n                            <Input  size='xs'\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    id='password'\r\n                                    aria-describedby='password-helper-text' \r\n                                    value={password}\r\n                                    onChange={(e)=> setPassword(e.target.value)}/>\r\n                                  <FormHelperText id='password-helper-text' >The password you used to sign up with</FormHelperText>\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                        <FormLabel htmlFor='First Name' className='form-labels' >First Name</FormLabel>\r\n                        <Input  isRequired\r\n                                 size='xs'\r\n                                type={firstName}\r\n                                id='firstName'\r\n                                value={firstName}\r\n                                onChange={(e)=> setFirstName(e.target.value)}/>\r\n                           \r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <FormLabel htmlFor='Last Name' className='form-labels' mt='2' >Last Name</FormLabel>\r\n                        <Input  isRequired\r\n                                 size='xs'\r\n                                type={lastName}\r\n                                id='lastName'\r\n                                value={lastName}\r\n                                onChange={(e)=> setLastName(e.target.value)}/>\r\n                           \r\n                    </FormControl>\r\n                    <FormControl>\r\n                    <Button colorScheme='teal' type='submit' disabled={isInvalid} variant='outline' mt='2' size='sm' >Register</Button>\r\n                    </FormControl>\r\n\r\n                </form>  \r\n                </Box>\r\n                </Container>       \r\n            </div>\r\n            \r\n            \r\n                )\r\n\r\n\r\n}\r\n\r\nexport default RegisterForm","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Auth\\ErrorMessage.js",["140"],"import {Box, Alert, AlertIcon, AlertDescription} from '@chakra-ui/react'\r\nimport RegisterForm from './RegisterForm'\r\n\r\nconst ErrorMessage = ({message}) =>{\r\n\r\n    return (\r\n\r\n        <Box my={4}>\r\n            <Alert status='error' borderRadius={4}>\r\n                <AlertIcon/>\r\n            <AlertDescription>{message}</AlertDescription>\r\n            </Alert>\r\n\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default ErrorMessage","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\Goals.js",[],"C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\Comments.js",["141"],"// import Goals from './Goals'\r\nimport {useState, useEffect} from 'react'\r\nimport {Box, Flex, Container, Input, Button} from '@chakra-ui/react'\r\nimport axios from 'axios'\r\nimport Moment from 'react-moment'\r\nimport {MdDelete} from 'react-icons/md'\r\nimport {AiFillEdit} from 'react-icons/ai'\r\nimport EditComments from './EditComments'\r\n\r\nconst Comments = (props)=>{\r\n\r\n    const [comment, setComment] = useState('')\r\n    const [allComments, setAllComments] = useState([])\r\n    const [editing, setEditing] = useState(false)\r\n \r\n    const {index, allGoals, setIndex, goal_id} = props\r\n\r\n    useEffect(()=>{\r\n        getComments()\r\n\r\n\r\n    }, [])\r\n\r\n\r\nconst getComments = ()=>{\r\n    axios.get(`/getcomments`)\r\n    .then(res=>{\r\n        setAllComments(res.data)\r\n    })\r\n    .catch(err=> console.log(err))\r\n\r\n}\r\n\r\n\r\n const  submitComment =(id)=>{\r\n    axios.post(`/addcomment/${id}`, {comment})\r\n    .then(res=>{\r\n        setAllComments(res.data)\r\n\r\n    })\r\n    .catch(err=> console.log(err))\r\n }\r\n\r\n const editComment =(id)=>{\r\n     axios.put(`/editcomment/${id}`, {comment})\r\n     .then(res=> {\r\n         setAllComments(res.data)\r\n         setEditing(false)\r\n     })\r\n     .catch(error=> console.log(error))\r\n }\r\n\r\n\r\n const handleEdit=()=>{\r\n     setEditing(true)\r\n }\r\n\r\n\r\n const deleteComment = (id)=>{\r\n     axios.delete(`/deletecomment/${id}`)\r\n     .then(_=> getComments())\r\n     .catch(error=> console.log(error))\r\n }\r\n\r\n//  console.log(goal_id, 'props or not props')\r\n//  console.log(allComments, 'AllComments object')\r\n\r\n\r\n\r\n\r\n console.log(goal_id, 'goal_id')\r\n    return (\r\n        <>\r\n        <Flex>\r\n            <Container >\r\n\r\n          \r\n\r\n          \r\n\r\n\r\n\r\n\r\n{allComments && \r\n                \r\n                allComments.filter(c=> {\r\n                    console.log(c.goal_id, goal_id)\r\n\r\n                    return c.goal_id === goal_id}).map(allC=>{\r\n                    \r\n\r\n                    if(allC.goal_id === goal_id ){\r\n\r\n\r\n                        return <li key={allC.comment_id} className='commentList'>\r\n                        {allC.comment}\r\n                    <EditComments editComment={editComment}  handleEdit={handleEdit} editing={editing} />\r\n                                                                \r\n                    \r\n                                                                <Box>\r\n                                                                <Moment format='MM/DD/YYYY'>{allC.goal_id.date}</Moment> \r\n                                                                <Button size='xs'\r\n                                                                        onClick={()=>editComment(allC.comment_id, goal_id)}\r\n                                                                ><AiFillEdit/>\r\n                                                                </Button>\r\n                                                                \r\n                                                                \r\n                                                                <Button  size='xs'\r\n                                                                         onClick={()=>deleteComment(allC.comment_id, goal_id)}   \r\n                                                                ><MdDelete/></Button> \r\n                                                                </Box>\r\n                       \r\n\r\n                        </li> }\r\n                        \r\n                    // else if (allC === allC.length){\r\n\r\n\r\n\r\n                        // return <li key={allC.comment_id} className='commentList'>\r\n                        //         {allC.comment}\r\n                        //     <EditComments editComment={editComment}  handleEdit={handleEdit} editing={editing} />\r\n                                                                        \r\n                            \r\n                        //                                                 <Box>\r\n                        //                                                 <Moment format='MM/DD/YYYY'>{allC.goal_id.date}</Moment> \r\n                        //                                                 <Button size='xs'\r\n                        //                                                         onClick={()=>editComment(allC.comment_id, goal_id)}\r\n                        //                                                 ><AiFillEdit/>\r\n                        //                                                 </Button>\r\n                                                                        \r\n                                                                        \r\n                        //                                                 <Button  size='xs'\r\n                        //                                                          onClick={()=>deleteComment(allC.comment_id, goal_id)}   \r\n                        //                                                 ><MdDelete/></Button> \r\n                        //                                                 </Box>\r\n                               \r\n    \r\n                        //         </li> }\r\n                                \r\n                        // })\r\n                })\r\n\r\n\r\n                    }    \r\n           \r\n                    \r\n                    \r\n{/* } */}\r\n\r\n\r\n                    <Box className='commentBox' padding={2}>\r\n                    <Input  \r\n                            placeholder='comment on your progress'\r\n                            size='xs'\r\n                            type='text'\r\n                            value={comment}\r\n                            onChange={(e)=>setComment(e.target.value)}  \r\n                    />\r\n                    <Button size='xs' \r\n                            onClick={()=>submitComment(goal_id, comment)}\r\n                    >Save</Button>\r\n                    </Box>\r\n\r\n                    <Box className='prev-next-buttons' p={10} >\r\n                                <Button size='xs'\r\n                                        onClick={()=>{\r\n                                            if(index > 0 ){\r\n                                                setIndex(index-1)\r\n                                            }\r\n                                        }}\r\n                                        \r\n                                        \r\n                                        >Previous\r\n                                </Button>\r\n\r\n                                \r\n                                <Button size='xs'\r\n                                        onClick={()=>{\r\n                                            \r\n                                            if(index < allGoals.length){\r\n                                                setIndex(index+1)\r\n                                                \r\n                                            } else if (index === allGoals.length){\r\n                                                setIndex(0)\r\n                                                return allGoals[0]\r\n                                                \r\n                                               \r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    >Next\r\n                                </Button>\r\n\r\n                                </Box>\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n\r\n\r\n        </Flex>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Comments","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Goals\\EditComments.js",["142","143"],"// import Comments from './Comments'\r\n\r\nimport axios from 'axios'\r\nimport {useState} from 'react'\r\nimport {Input, Button} from '@chakra-ui/react'\r\n\r\nconst EditComments = (props)=>{\r\n\r\n    const [newComment, setNewComment] = useState('')\r\n    const {editing, editComment} = props\r\n\r\n    \r\n\r\n\r\nreturn (\r\n\r\n            <> \r\n            { editing ? (\r\n\r\n                <div>\r\n                <Input \r\n                size='xs'\r\n                onChange={(e)=>setNewComment(e.target.value)}\r\n                \r\n                />\r\n                <Button size='xs' \r\n                        colorScheme='teal'\r\n                        onClick={()=>editComment()}\r\n                        >Save</Button>\r\n                </div>\r\n\r\n            )\r\n                    : null\r\n\r\n            }\r\n            \r\n\r\n            </>\r\n            \r\n            \r\n        )\r\n}\r\n\r\nexport default EditComments","C:\\Users\\britt\\Devmountain\\unit-04\\nodb-career-tool\\src\\components\\Profile\\Profile.js",["144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":12},{"ruleId":"149","severity":1,"message":"154","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"155","line":25,"column":48,"nodeType":"151","messageId":"152","endLine":25,"endColumn":54},{"ruleId":"156","severity":1,"message":"157","line":16,"column":4,"nodeType":"158","endLine":16,"endColumn":6,"suggestions":"159"},{"ruleId":"149","severity":1,"message":"160","line":23,"column":11,"nodeType":"151","messageId":"152","endLine":23,"endColumn":25},{"ruleId":"145","replacedBy":"161"},{"ruleId":"147","replacedBy":"162"},{"ruleId":"149","severity":1,"message":"163","line":7,"column":9,"nodeType":"151","messageId":"152","endLine":7,"endColumn":24},{"ruleId":"149","severity":1,"message":"164","line":18,"column":8,"nodeType":"151","messageId":"152","endLine":18,"endColumn":15},{"ruleId":"149","severity":1,"message":"165","line":76,"column":27,"nodeType":"151","messageId":"152","endLine":76,"endColumn":37},{"ruleId":"149","severity":1,"message":"166","line":7,"column":11,"nodeType":"151","messageId":"152","endLine":7,"endColumn":21},{"ruleId":"149","severity":1,"message":"167","line":8,"column":11,"nodeType":"151","messageId":"152","endLine":8,"endColumn":23},{"ruleId":"149","severity":1,"message":"168","line":9,"column":11,"nodeType":"151","messageId":"152","endLine":9,"endColumn":23},{"ruleId":"149","severity":1,"message":"169","line":10,"column":11,"nodeType":"151","messageId":"152","endLine":10,"endColumn":24},{"ruleId":"149","severity":1,"message":"170","line":11,"column":11,"nodeType":"151","messageId":"152","endLine":11,"endColumn":24},{"ruleId":"149","severity":1,"message":"171","line":12,"column":11,"nodeType":"151","messageId":"152","endLine":12,"endColumn":28},{"ruleId":"149","severity":1,"message":"172","line":13,"column":11,"nodeType":"151","messageId":"152","endLine":13,"endColumn":17},{"ruleId":"149","severity":1,"message":"173","line":14,"column":11,"nodeType":"151","messageId":"152","endLine":14,"endColumn":24},{"ruleId":"149","severity":1,"message":"174","line":15,"column":11,"nodeType":"151","messageId":"152","endLine":15,"endColumn":20},{"ruleId":"149","severity":1,"message":"175","line":26,"column":9,"nodeType":"151","messageId":"152","endLine":26,"endColumn":18},{"ruleId":"149","severity":1,"message":"176","line":24,"column":26,"nodeType":"151","messageId":"152","endLine":24,"endColumn":41},{"ruleId":"149","severity":1,"message":"176","line":18,"column":26,"nodeType":"151","messageId":"152","endLine":18,"endColumn":41},{"ruleId":"149","severity":1,"message":"177","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":89,"column":60,"nodeType":"180","messageId":"181","endLine":89,"endColumn":62},{"ruleId":"149","severity":1,"message":"182","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"183","line":9,"column":12,"nodeType":"151","messageId":"152","endLine":9,"endColumn":22},{"ruleId":"149","severity":1,"message":"184","line":1,"column":9,"nodeType":"151","messageId":"152","endLine":1,"endColumn":17},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'routes' is defined but never used.","'skills' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'password' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'handleRegister' is assigned a value but never used.",["185"],["186"],"'TiDeleteOutline' is defined but never used.","'editing' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'DrawerBody' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerHeader' is defined but never used.","'DrawerOverlay' is defined but never used.","'DrawerContent' is defined but never used.","'DrawerCloseButton' is defined but never used.","'Drawer' is defined but never used.","'useDisclosure' is defined but never used.","'useStyles' is defined but never used.","'smVariant' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'RegisterForm' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'axios' is defined but never used.","'newComment' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [password, username]",{"range":"190","text":"191"},[391,393],"[password, username]"]